name: Gitconvex build deploy

on: push

jobs:
  # Build for Ubuntu Linux
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Setup libgit2
        run: |
          wget https://github.com/libgit2/libgit2/releases/download/v1.1.0/libgit2-1.1.0.tar.gz
          tar -xzf libgit2-1.1.0.tar.gz
          cd libgit2-1.1.0
          mkdir build && cd ./build
          sudo apt  install cmake -y
          sudo apt install pkg-config -y
          sudo apt-get install libssl-dev
          cmake ..
          cmake --build .
          sudo make install
          sudo /sbin/ldconfig -v

      - name: Get dependencies
        run: |
          go get gotest.tools/gotestsum
          go get -v ./...

      - name: Clone test repo
        run: |
          mkdir -p /home/runner/work/gitconvex/starfleet/
          git clone https://github.com/neel1996/starfleet.git /home/runner/work/gitconvex-server/starfleet/

      - name: Overwrite mock test file
        run: |
          echo "# gitconvex GoLang project" > /home/runner/work/gitconvex/gitconvex/README.md

      - name: Run test cases
        run: |
          git config --global user.name "${{ secrets.USER_NAME }}" && git config --global user.email "${{ secrets.USER_EMAIL }}"
          export GOTESTENV=ci && gotestsum --format=testname ./...

      - name: Package gitconvex bundle
        run: |
          make build
          cd dist 
          tar -czf gitconvex-linux-amd64-v${{ secrets.TARGET_RELEASE_CHANNEL }}.tar.gz *
          ls -ltr
          cd ..
      
      - name: Github CLI release
        run: |
          gh version
          echo "${{ secrets.CLI_AUTH_KEY }}" > auth.txt 
          gh auth login --with-token < auth.txt
          gh release upload --repo ${{ secrets.USER_NAME }}/gitconvex ${{ secrets.TARGET_RELEASE_CHANNEL }} ./dist/gitconvex-linux-amd64-v${{ secrets.TARGET_RELEASE_CHANNEL }}.tar.gz --clobber 
           
  # Build for MacOS
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Install brew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          brew install libssh2
          brew install libgit2
          go get -v ./...

      - name: Package gitconvex bundle
        run: |
          make build
          cd dist 
          tar -czf gitconvex-macos-amd64-v${{ secrets.TARGET_RELEASE_CHANNEL }}.tar.gz *

      - name: Upload bundle to release channel
        run: |
          echo ${{ secrets.CLI_AUTH_KEY }} > auth.txt
          gh auth login --with-token < auth.txt
          gh release upload ${{ secrets.TARGET_RELEASE_CHANNEL }} ./dist/gitconvex-macos-amd64-v${{ secrets.TARGET_RELEASE_CHANNEL }}.tar.gz --clobber

  # Test Build for Windows
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      
      - name: Add choco packages
        run: |
          choco install wget
      
      - name: Add MSYS to PATH
        run: |
          setx path "%path%;C:\msys64"
          setx path "%path%;C:\msys64\usr"
          setx path "%path%;C:\msys64\usr\bin"

      - name: Build libgit2
        run: |
          setx path "%path%;C:\msys64\usr\bin"
          unzip -q ./lib/win/dep_libs.zip
          wget -q https://github.com/libgit2/libgit2/releases/download/v1.1.0/libgit2-1.1.0.zip
          unzip -q libgit2-1.1.0.zip
          cd libgit2-1.1.0
          cp -rp ../lib/ .
          git clone https://github.com/libssh2/libssh2 libssh2
          mkdir build && mkdir install && cd build
          cmake -DPKG_CONFIG_EXECUTABLE=C:\\msys64\\usr\\bin\\pkg-config.exe -DCMAKE_INSTALL_PREFIX=../install -DOPENSSL_ROOT_DIR=../lib/win/ -DBUILD_CLAR=OFF -DEMBED_SSH_PATH=../libssh2 ..
          cmake --build . --target install
          cd ../install
          cp ./bin/git2.dll C:\\msys64\\usr\\bin
          cp ./lib/git2.lib C:\\msys64\\usr\\lib
          cp ./lib/pkgconfig/libgit2.pc C:\\msys64\\usr\\lib\\pkgconfig

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          rm C:\\Strawberry\\perl\\bin\\pkg-config.bat
          export PATH="/c/msys64/usr/bin"
          go get -v ./...

      - name: Build gitconvex bundle for windows 
        run: |
          ./make.bat build 
          cd dist 
          7z a -r -tzip gitconvex-windows-v${{ secrets.TARGET_RELEASE_CHANNEL }}.zip *
          ls -ltr